Traceback (most recent call last):
  File "c:\Users\stanbaek\git\books\.venv\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "c:\Users\stanbaek\git\books\.venv\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\stanbaek\git\books\.venv\Lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\stanbaek\AppData\Local\Programs\Python\Python312\Lib\asyncio\base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "c:\Users\stanbaek\git\books\.venv\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "c:\Users\stanbaek\git\books\.venv\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "c:\Users\stanbaek\git\books\.venv\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from pathlib import Path
from random import Random
import math

DATA_DIR = Path("./data")
DATA_DIR.mkdir(exist_ok=True)

# Grades dataset
grades_rows = [
    ("Ana", 92, 95, 88),
    ("Bo", 90, 85, 91),
    ("Cat", 88, 90, 84),
    ("Dan", 70, 79, 75),
    ("Eve", 98, 94, 96),
]
with open(DATA_DIR/"grades.csv", "w", encoding="utf-8") as f:
    f.write("name,exam1,exam2,exam3
")
    for row in grades_rows:
        f.write(",".join([row[0]] + [str(x) for x in row[1:]]) + "
")

# Sensor dataset (synthetic)
rand = Random(42)
fs = 10.0  # Hz
N = 100
sensor_rows = []
for i in range(N):
    t = i / fs
    x = 0.05*math.sin(2*math.pi*0.5*t) + 0.01*rand.uniform(-1,1)
    y = 0.05*math.cos(2*math.pi*0.5*t) + 0.01*rand.uniform(-1,1)
    z = 9.80 + 0.03*math.sin(2*math.pi*1.0*t + 0.3) + 0.02*rand.uniform(-1,1)
    sensor_rows.append((t,x,y,z))

with open(DATA_DIR/"sensor.csv", "w", encoding="utf-8") as f:
    f.write("t,x,y,z
")
    for row in sensor_rows:
        f.write(",".join(f"{v:.4f}" if isinstance(v,float) else str(v) for v in row) + "
")

print("Created:", (DATA_DIR/"grades.csv").resolve())
print("Created:", (DATA_DIR/"sensor.csv").resolve())

# In-memory versions
grade_records = [
    {"name": r[0], "scores": [r[1], r[2], r[3]]} for r in grades_rows
]

sensor_samples = sensor_rows  # list of tuples (t,x,y,z)
len(grade_records), len(sensor_samples)
------------------


  [36mCell[39m[36m [39m[32mIn[4][39m[32m, line 17[39m
[31m    [39m[31mf.write("name,exam1,exam2,exam3[39m
            ^
[31mSyntaxError[39m[31m:[39m unterminated string literal (detected at line 17)


